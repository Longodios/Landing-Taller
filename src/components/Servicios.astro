---

---

<section class="text-white bg-black grid place-items-center py-5">
  <div class="grid md:flex gap-6 p-6 max-w-[1300px] w-full justify-around">
    <div class="grid gap-8 p-9 rounded-3xl max-w-[720px]">
      <h2 class="text-4xl sm:text-6xl w-fit font-bold">Nuestros servicios</h2>
      <p class="leading-relaxed">
        Nuestro equipo de expertos cuenta con m치s de 25 a침os de experiencia en
        el sector, lo que nos permite ofrecer un servicio de calidad a nuestros
        clientes. Nos enorgullecemos de nuestra atenci칩n al detalle y nuestro
        compromiso con la innovaci칩n continua.
      </p>
    </div>
    <ul class="grid gap-4 p-2">
      <li class="flex flex-col items-center">
        <span id="trabajadores" class="text-4xl font-bold">0</span>
        <p>TRABAJADORES</p>
      </li>
      <li class="flex flex-col items-center">
        <span id="clientes" class="text-4xl font-bold">0</span>
        <p>CLIENTES</p>
      </li>
      <li class="flex flex-col items-center">
        <span id="proyectos" class="text-4xl font-bold">0</span>
        <p>PROYECTOS</p>
      </li>
    </ul>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const valores = [
      { id: "trabajadores", valor: 5 },
      { id: "clientes", valor: 200 },
      { id: "proyectos", valor: 10 },
    ];

    const options = {
      root: null,
      rootMargin: "0px",
      threshold: 0.5,
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const valorEncontrado = valores.find((v) => v.id === entry.target.id);

          if (valorEncontrado) {
            const { id, valor } = valorEncontrado;

            let contador = 0;
            const incremento = Math.ceil(valor / 100);
            const intervalo = setInterval(() => {
              contador += incremento;
              if (contador >= valor) {
                contador = valor;
                clearInterval(intervalo);
              }
              entry.target.textContent = contador.toString();
            }, 35);

            observer.unobserve(entry.target);
          }
        }
      });
    }, options);

    valores.forEach(({ id }) => {
      const elemento = document.getElementById(id);
      if (elemento) {
        observer.observe(elemento);
      }
    });
  });
</script>
